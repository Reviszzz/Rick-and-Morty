function CharacterList() {
  const [characters, setCharacters] = useState([]);
  const [loding, setLoding] = useState(true);
  const [page, setPage] = useState(1);
  const [totalPages, setTotalPages] = useState(null);
  useEffect(() => {
    async function fetchData() {
      const response = await fetch(
        `https://rickandmortyapi.com/api/character?page=${page}`
      );
      const data = await response.json();
      setLoding(false);
      setCharacters(data.results);
      setTotalPages(data.info.pages);
    }
    fetchData();
  }, [page]);

  

  function NavPage(totalPages,props) {
    return (
      <header className="d-flex justify-content-between align-items-center">
        <button
          className="btn btn-primary btn-sm"
          onClick={() => {
            props.setPage(props.page - 1);
          }}
        >
          page {props.page - 1}
        </button>

        <button
          className="btn btn-primary btn-sm"
          onClick={() => {
            props.setPage(props.page + 1);
          }}
        >
          page {props.page + 1}
        </button>
      </header>
    );
  }

  if (loding) {
    return <div className="text-xl text-center">Loading</div>;
  }
  return (
    <div className="container">
      <BuscarPersonaje />

      <NavPage page={page} setPage={setPage} />

      {loding ? (
        <h1 className="text-">Loading...</h1>
      ) : (
        <div className="row">
          {characters.map((character) => {
            return (
              <div className="col-md-4" key={character.id}>
                <Character character={character} />
              </div>
            );
          })}
        </div>
      )}

      <NavPage  page={page} setPage={setPage}/>
    </div>
  );
}

export default CharacterList;